buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('net.serenity-bdd:serenity-gradle-plugin:2.1.4')
    }
}

plugins {
    id 'java'
    id "net.serenity-bdd.serenity-gradle-plugin" version "4.0.46"
    id 'idea'
}

group = 'reqres'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}


ext {
    serenityVersion = '2.1.4'
    serenityCucumberVersion = '1.9.51'
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation "net.serenity-bdd:serenity-rest-assured:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-ensure:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay-rest:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-core:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-junit:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-screenplay:$rootProject.ext.serenityVersion"
    implementation "net.serenity-bdd:serenity-cucumber:$rootProject.ext.serenityCucumberVersion"
    testImplementation "org.hamcrest:hamcrest-core:2.2"
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.slf4j:slf4j-simple:2.0.12'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Test) {
    systemProperty "file.encoding", "UTF-8"
    maxParallelForks = 1
}

test {
    def hasPropertyValue = project.hasProperty('runner')
    if (hasPropertyValue) {
        systemProperty "runner", findProperty("runner")
        def runner = "${runner}".split(",")
        for (run in runner) {
            include "**/" + run + ".class"
        }
    } else {
        println 'Run all test'
    }
}